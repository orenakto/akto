name: Production

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version for the deployment'
        required: true
      skipTests:
        description: 'Do you want to skip unit tests?'
        required: true
        default: 'False'
        type: choice
        options:
          - 'False'
          - 'True'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-akto:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: "8"
          architecture: x64
      - uses: actions/setup-node@v2
        with:
          node-version: '17'
      - name: Setup Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "29.2"
      - uses: bufbuild/buf-action@v1
        with:
          setup_only: true
      - name: Download Akto templates zip and PII files
        working-directory: ./apps/dashboard/src/main/resources
        run: |
          wget -O tests-library-master.zip https://github.com/akto-api-security/tests-library/archive/refs/heads/master.zip
          wget -O general.json https://raw.githubusercontent.com/akto-api-security/pii-types/master/general.json
          wget -O fintech.json https://raw.githubusercontent.com/akto-api-security/akto/master/pii-types/fintech.json
          wget -O filetypes.json https://raw.githubusercontent.com/akto-api-security/akto/master/pii-types/filetypes.json
          wget -O automated_api_groups.csv https://raw.githubusercontent.com/akto-api-security/akto/master/automated-api-groups/automated-api-groups.csv

      - name: Prepare Dashboard polaris UI
        working-directory: ./apps/dashboard/web/polaris_web
        run: npm install && export RELEASE_VERSION=${{github.event.inputs.release_version}} && npm run build
      - name: Run mvn package
        run: mvn clean install
    

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2


 
